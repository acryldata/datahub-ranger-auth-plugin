apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven-publish'
apply plugin: 'io.codearte.nexus-staging'
apply from: '../buildSrc/versioning.gradle'


repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnit()
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

dependencies {
    implementation(externalDependency.rangerCommons) {
        exclude group: "org.apache.htrace", module: "htrace-core4"
    }
    implementation externalDependency.hadoopCommon3

    constraints {
        implementation(externalDependency.woodstoxCore) {
            because("previous versions are vulnerable to CVE-2022-40151 CVE-2022-40152")
        }
        implementation(externalDependency.jettyClient) {
            because("previous versions are vulnerable to CVE-2021-28165")
        }
    }

    testCompile externalDependency.testng
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'DataHub Apache Ranger Plugin'
                group = 'io.acryl'
                artifactId = 'datahub-ranger-plugin'
                description = 'DataHub Apache Ranger plugin for authorization of DataHub resources'
                url = 'https://datahubproject.io'
                scm {
                    connection = 'scm:git:git://github.com/datahub-project/datahub.git'
                    developerConnection = 'scm:git:ssh://github.com:datahub-project/datahub.git'
                    url = 'https://github.com/datahub-project/datahub.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'datahub'
                        name = 'DataHub'
                        email = 'datahub@acryl.io'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            def ossrhUsername = System.getenv('RELEASE_USERNAME')
            def ossrhPassword = System.getenv('RELEASE_PASSWORD')
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = System.getenv("SIGNING_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

// Required to submit jar file to staging repo of maven central
nexusStaging {
    serverUrl = "https://s01.oss.sonatype.org/service/local/" //required only for projects registered in Sonatype after 2021-02-24
    username = System.getenv("NEXUS_USERNAME")
    password = System.getenv("NEXUS_PASSWORD")
}
